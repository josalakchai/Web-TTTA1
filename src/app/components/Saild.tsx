'use client';

import React, { useEffect, useRef } from 'react';
import Image from 'next/image';
import Link from 'next/link';

// ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö SSR/CSR: ‡πÉ‡∏ä‡πâ dynamic import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Flickity ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ client-side
import 'flickity/css/flickity.css';

// ‡πÄ‡∏û‡∏¥‡πà‡∏° type ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Flickity ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ any
type FlickityType = {
    destroy: () => void;
};

interface Event {
    id: string;
    src: string;
    alt: string;
    title: string;
    date: string;
    location: string;
    content: string[];
}

// ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• event ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢
const events: Event[] = [
    {
        id: '1',
        src: '/id1.png',
        alt: 'Smart WMS',
        title: 'üì¢ Smart WMS ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏±‡∏á ‚ùó',
        date: '15 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° 2568',
        location: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà IE Thai Software',
        content: [
            '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏á‡∏Ñ‡∏•‡∏±‡∏á',
            '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
            '‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û',
            '‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£',
            '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
        ]
    },
    {
        id: '2',
        src: '/id4.png',
        alt: 'Smart WMS v2',
        title: 'üì¢ Smart WMS (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 2) ‚ùó',
        date: '20 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° 2568',
        location: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà IE Thai Software',
        content: [
            '‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà',
            '‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥',
            '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Å',
            '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå',
        ]
    },
    {
        id: '3',
        src: '/id2.png',
        alt: 'AI Workshop',
        title: 'üì¢ AI Workshop ‚ùó',
        date: '1 ‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2568',
        location: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà AI Center',
        content: [
            '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡πÅ‡∏•‡∏∞ Machine Learning',
            'Workshop ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏¥‡∏á',
            '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ AI ‡πÉ‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à',
            '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ AI Model',
        ]
    },
    {
        id: '4',
        src: '/id3.png',
        alt: 'Cloud Computing',
        title: 'üì¢ Cloud Computing Seminar ‚ùó',
        date: '12 ‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2568',
        location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø Tech Convention Hall',
        content: [
            'AWS, Azure, Google Cloud',
            '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Cloud Infrastructure',
            'Serverless Computing',
            'Cloud Security',
        ]
    },
    {
        id: '5',
        src: '/id5.png',
        alt: 'Web Development',
        title: 'üì¢ Web Development Bootcamp ‚ùó',
        date: '22 ‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2568',
        location: 'Online Live Zoom',
        content: [
            'React, Next.js, TypeScript',
            'Full-Stack Development',
            'Database Design',
            'Deployment ‡πÅ‡∏•‡∏∞ DevOps',
        ]
    },
    {
        id: '6',
        src: '/VP autoar.png',
        alt: 'Data Science',
        title: 'üì¢ Data Science Workshop ‚ùó',
        date: '1 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2568',
        location: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
        content: [
            'Data Analysis ‡πÅ‡∏•‡∏∞ Visualization',
            'Python ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Data Science',
            'Machine Learning Algorithms',
            'Big Data Processing',
        ]
    },
    {
        id: '7',
        src: '/NRLL.png',
        alt: 'Cybersecurity',
        title: 'üì¢ Cybersecurity Training ‚ùó',
        date: '15 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2568',
        location: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        content: [
            'Network Security',
            'Penetration Testing',
            'Security Best Practices',
            'Incident Response',
        ]
    }
];

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û (width/height) ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö aspect ratio 3:4
const IMAGE_WIDTH = 240;
const IMAGE_HEIGHT = 320;

export default function EventPage() {
    const carouselRef = useRef<HTMLDivElement>(null);

    useEffect(() => {
        let flickityInstance: FlickityType | null = null;
        // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö SSR/CSR: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö window ‡πÅ‡∏•‡∏∞ dynamic import Flickity ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ client
        const setupFlickity = async () => {
            if (typeof window !== 'undefined' && carouselRef.current) {
                // dynamic import Flickity only on client
                const FlickityModule = await import('flickity');
                // ‡πÉ‡∏ä‡πâ as unknown as ‡πÄ‡∏û‡∏∑‡πà‡∏≠ type-safe
                const Flickity = (FlickityModule.default || FlickityModule) as unknown as {
                    new (el: Element, options?: Record<string, unknown>): FlickityType;
                };
                flickityInstance = new Flickity(carouselRef.current, {
                    cellAlign: 'left',
                    contain: true,
                    wrapAround: true,
                    freeScroll: true,
                    autoPlay: 3000,
                    pauseAutoPlayOnHover: true,
                    pageDots: true,
                });
            }
        };
        setupFlickity();

        // Cleanup Flickity instance on unmount
        return () => {
            if (flickityInstance && typeof flickityInstance.destroy === 'function') {
                flickityInstance.destroy();
            }
        };
    }, []);

    return (
        <section className="max-w-6xl mx-auto py-16 px-4">
            <h1 className="text-center text-3xl font-bold mb-12 text-gray-800">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h1>
            <div ref={carouselRef} className="carousel">
                {events.map((event) => (
                    <div
                        key={event.id}
                        className="carousel-cell w-full sm:w-2/3 md:w-1/3 lg:w-1/4 px-2"
                        style={{ position: 'relative' }}
                    >
                        <Link href={`/event/${event.id}`} className="block group focus:outline-none">
                            <div
                                className="portfolio-item img-zoom"
                                style={{ width: `${IMAGE_WIDTH}px`, margin: '0 auto' }}
                            >
                                <div className="portfolio-item-wrap border-radius1 overflow-hidden shadow transition duration-300 rounded-xl">
                                    <div
                                        className="portfolio-image relative bg-gray-100"
                                        style={{
                                            width: '100%',
                                            height: `${IMAGE_HEIGHT}px`,
                                            aspectRatio: '3/4',
                                        }}
                                    >
                                        <Image
                                            src={event.src}
                                            alt={event.alt}
                                            width={IMAGE_WIDTH}
                                            height={IMAGE_HEIGHT}
                                            className="object-cover w-full h-full"
                                            style={{
                                                width: '100%',
                                                height: '100%',
                                                objectFit: 'cover',
                                                objectPosition: 'center',
                                                backgroundColor: '#f3f4f6',
                                            }}
                                            sizes="(max-width: 768px) 60vw, 20vw"
                                        />
                                        {/* Hover overlay */}
                                        <div
                                            className="absolute inset-0 flex flex-col justify-center items-center opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                                            style={{
                                                background: 'rgba(0,0,0,0.6)',
                                                zIndex: 2,
                                            }}
                                        >
                                            <div className="portfolio-description px-4 py-2 text-center">
                                                <h3 className="text-base font-semibold text-white mb-2">{event.title}</h3>
                                                <p className="text-xs text-gray-200 mb-2">{event.date} | {event.location}</p>
                                                <div className="text-gray-100 text-xs space-y-0.5 mb-1 text-left">
                                                    {event.content.map((line, index) => (
                                                        <p key={index}>{index + 1}. {line}</p>
                                                    ))}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </Link>
                    </div>
                ))}
            </div>
        </section>
    );
}
